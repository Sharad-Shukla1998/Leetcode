class Solution {
public:
    ListNode* rev(ListNode* head){
        ListNode* curr=head,*prev=NULL,*nxt=head->next;
        while(curr){
            curr->next=prev;
            prev=curr;
             curr=nxt;
            if(nxt)
                nxt=nxt->next;
           
        }
        return prev;
    }
    vector<int> nextLargerNodes(ListNode* head) {
        stack<int>s;
      vector<int>v;
        ListNode* a=rev(head);
        s.push(a->val);
       a=a->next;
        v.push_back(0);
        while(a){
            int val=a->val;
            if(val<s.top()){
                v.push_back(s.top());
            }
            else{
                while(!s.empty() && val>=s.top()){
                    s.pop();
                }
                if(s.empty())
                    v.push_back(0);
                else
                    v.push_back(s.top());
            }
            s.push(val);
            a=a->next;}
        reverse(v.begin(),v.end());
        
        return v; } 
};
  
