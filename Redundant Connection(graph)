class Solution {
public:
    int parent[100000];
    int find(int i){
        if(parent[i]==-1)
            return i;
        return find(parent[i]);
    }
    vector<int> findRedundantConnection(vector<vector<int>>& edges) {
        int n=edges.size();
        int a,b;
        for(int i=0;i<=n;i++)
            parent[i]=-1;
        for(int i=0;i<n;i++)
        {
            int xset=find(edges[i][0]);
            int yset=find(edges[i][1]);
            if(xset==yset){
                a=edges[i][0];
                b=edges[i][1];
            }
            else{
                parent[yset]=xset;
            }
            
        }
        vector<int>v;
        v.push_back(a);
        v.push_back(b);
        return v;
        
        
    }
};
