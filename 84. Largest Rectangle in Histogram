class Solution {
public:
    int largestRectangleArea(vector<int>& arr) {
        int n=arr.size();
        if(!n)
            return 0;
        stack<pair<int,int>>s;
	vector<int>v(n,-1);
	s.push({arr[n-1],n-1});
	for(int i=n-2;i>=0;i--){
		if(arr[i]>s.top().first)
		{
			v[i]=s.top().second;
		
		}
		else
		{
			while(!s.empty() && s.top().first>=arr[i])
			s.pop();
			if(s.empty())
			v[i]=(-1);
			else
			v[i]=s.top().second;
		}
		s.push({arr[i],i});
	}

	//part2
	stack<pair<int,int>>s1;
	vector<int>v1(n,-1);
	s1.push({arr[0],0});
	for(int i=1;i<n;i++){
		if(arr[i]>s1.top().first)
		{
			v1[i]=s1.top().second;
	
		}
		else
		{
			while(!s1.empty() && s1.top().first>=arr[i])
			s1.pop();
			if(s1.empty())
			v1[i]=(-1);
			else
			v1[i]=s1.top().second;
		}
		s1.push({arr[i],i});
	}
	
	int sum=0;
	for(int i=0;i<n;i++){
		int r=v[i];
		if(v[i]==-1)
		  r=n;
		 int l=v1[i];
		
		 sum=max(sum,arr[i]*(r-l-1));
	}
        return sum;
    }
};
