/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(!head)
            return NULL;
        
        ListNode* curr=head,*prev=NULL,*temp=head;
       
        curr=head;
        cout<<"hello";
        while(--n){
            curr=curr->next;
        }
        ListNode* a=NULL;
        bool flag=false;
        cout<<curr->val;
        while(curr->next){
            if(!flag)
            {
                a=temp;
                flag=true;
            }
            prev=temp;
            temp=temp->next;
            curr=curr->next;
        }
        if(!flag)
        {  a=head->next;
         return a;}
        prev->next=temp->next;
      //  free(temp);
        return a;
    }
};
